steps:
  - command: |
      uname -a
      make --version
      ${SHELL} --version || true
      c++ --version
      ld -v
      ! command -v gdb &>/dev/null || gdb --version
      dmd --version | true
    label: "Print envs"
    env:
      DETERMINISTIC_HINT: 1

  - command: |
      set -uexo pipefail
      origin_repo=dmd # TODO
      origin_target_branch="\$BUILDKITE_PULL_REQUEST_BASE_BRANCH"
      if [ -z "\$origin_target_branch" ] ; then
        origin_target_branch="\$BUILDKITE_BRANCH"
      fi
      echo \$origin_target_branch

      for dir in dmd druntime phobos tools dub ; do
          rm -rf \$dir
          if [ "\$origin_repo" == "\$dir" ] ; then
            # we have already cloned this repo, so let's use this data
            mkdir -p \$dir
            cp -r \$(ls -A | grep -v dmd) \$dir
          else
            branch=\$(git ls-remote --exit-code --heads https://github.com/dlang/\$dir "\${origin_target_branch}" > /dev/null || echo "master")
            git clone -b "\${branch:-master}" --depth 1 https://github.com/dlang/\$dir
          fi
      done

      for dir in dmd druntime phobos ; do
          make -C \$dir -f posix.mak AUTO_BOOTSTRAP=1 --jobs=4
      done

      # build dub
      (cd dub && DMD='gdb -return-child-result -q -ex run -ex bt -batch --args dmd' ./build.sh)

      # build tools
      make -C tools -f posix.mak RELEASE=1 --jobs=4

      # distribution
      rm -rf distribution
      mkdir -p distribution/{bin,imports,libs}
      cp --archive --link dmd/generated/linux/release/64/dmd dub/bin/dub tools/generated/linux/64/rdmd distribution/bin/
      cp --archive --link phobos/etc phobos/std druntime/import/* distribution/imports/
      cp --archive --link phobos/generated/linux/release/64/libphobos2.{a,so,so*[!o]} distribution/libs/
      echo '[Environment]' >> distribution/bin/dmd.conf
      echo 'DFLAGS=-I%@P%/../imports -L-L%@P%/../libs -L--export-dynamic -L--export-dynamic -fPIC' >> distribution/bin/dmd.conf

      tar cvfz distribution.tgz distribution
    label: "Build"
    env:
      DETERMINISTIC_HINT: 1
    artifact_paths: "distribution.tgz"

  - wait

  - command: |
      set -uexo pipefail
      export PATH="\$PWD/distribution/bin:\$PATH"
      buildkite-agent artifact download distribution.tgz .
      tar xfz distribution.tgz
      rm -rf unit-threaded
      repo_url=https://github.com/atilaneves/unit-threaded
      tag=$(git ls-remote --tags \${repo_url} | sed -n 's|.*refs/tags/\(v\?[0-9]*\.[0-9]*\.[0-9]*\$\)|\1|p' | sort --version-sort | tail -n 1)
      git clone -b "\${tag:-master}" --depth 1 \$repo_url
      cd unit-threaded
      dub test
    label: "atilaneves/unit-threaded"
    env:
      DETERMINISTIC_HINT: 1

  - command: |
      set -uexo pipefail
      export PATH="\$PWD/distribution/bin:\$PATH"
      buildkite-agent artifact download distribution.tgz .
      tar xfz distribution.tgz
      rm -rf dproto
      repo_url=https://github.com/msoucy/dproto
      tag="master"
      git clone -b "\${tag:-master}" --depth 1 \$repo_url
      cd dproto
      dub test
    label: "msoucy/dproto"
    env:
      DETERMINISTIC_HINT: 1
